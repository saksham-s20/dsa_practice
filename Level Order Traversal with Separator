Level Order Traversal of Binary Tree with Separator in C++

#include<iostream>
#include<queue>
using namespace std;

class node{
    public:
        int data;
        node* left;
        node* right;
    node(int d){
        this->data = d;
        this->left = NULL;
        this->right = NULL;
    }
};

node* buildTree(node* root){
    
    cout<<"enter the data: "<<endl;
    int data;
    cin>> data;

    root = new node(data);

    if(data == -1){
        return NULL;
    }

    cout<<"enter the data to be inserted in the left of the "<< data <<": "<<endl;
    root->left = buildTree(root->left);

    cout<<"enter the data to be inserted in the right of the "<< data <<": "<<endl;
    root->right = buildTree(root->right);
    
    return root;
}


void levelOTSeperator(node* root){
    queue<node*> q1;
    q1.push(root);
    q1.push(NULL);

    while(!q1.empty()){
        node* tempp = q1.front();
        q1.pop();
        if(tempp == NULL){
            cout<<endl;
            if(!q1.empty()){
                q1.push(NULL);
            }
        }
        else{
            cout<<tempp->data<<" ";
            if(tempp->left){
                q1.push(tempp->left);
            }
            if(tempp->right){
                q1.push(tempp->right);
            }
        }
    }

}
int main(){
    node* root = NULL;
    
    root = buildTree(root);

    cout<<endl;
    levelOTSeperator(root);

    return 0;
}
